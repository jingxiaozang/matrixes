#NEXUS

    [ File output by Morphobank v3.0 (http://www.morphobank.org); 2023-06-13 01.09.35 ]

    BEGIN TAXA;
    DIMENSIONS NTAX=50;
    TAXLABELS
    		'Lepticitis dakotensis'
		'Ailurus fulgens'
		'Amphicticeps shackelfordi'
		'Broiliana nobilis'
		'Canis latrans'
		'Civettictis spp'
		'Daphoenus'
		'Dawsonicyon isami'
		'Didymictis vancleveae'
		'Dinictis felina'
		'Echinosorex gymnura'
		'Erinaceus concolor'
		'Felis composite'
		'Gulo gulo'
		'Herpestes spp'
		'Herpestides antiquus'
		'Hesperocyon gregarious'
		'Hoplophoneus sp'
		'Hyaenid'
		'Hyaenodon horridus'
		'Lycophocyon hutchisoni'
		'Mephitis spp'
		'Miacis sylvestris'
		'Gustafsonia cognitus'
		'Miacis gracilis'
		'Miacis parvivorus'
		'Miacis uintensis'
		'Mustelavus priscus'
		'Nandinia binotata'
		'Oodectes herpestoides'
		'Otariidae'
		'Otarocyon macdonaldi'
		'Palaeoprionodon lamandini'
		'Plesictis genettoides'
		'Proailurus lemanensis'
		'Procyon lotor'
		'Pseudobassaris riggsi'
		'Pteronarctos goedertae'
		'Quercygale angustidens'
		'Viretictis julieni'
		'Tapocyon robustus'
		'Thinocyon sp'
		'Ursus sp'
		'Viverravus acutus'
		'Viverravus gracilis'
		'Viverravus minutus'
		'Viverravus politus'
		'Vulpavus ovatus'
		'Vulpavus profectus'
		'Zodiolestes daimonelixensis'
    ;
    ENDBLOCK;

    BEGIN CHARACTERS;
	DIMENSIONS NCHAR=98;
	FORMAT DATATYPE=STANDARD GAP=- MISSING=? SYMBOLS="01234";
	CHARLABELS
		 [1] 'whf1'
		 [2] 'whf2'
		 [3] 'whf3'
		 [4] 'whf4'
		 [5] 'whf5'
		 [6] 'whf6'
		 [7] 'whf7'
		 [8] 'whf8'
		 [9] 'whf9'
		 [10] 'whf10'
		 [11] 'whf11'
		 [12] 'whf12'
		 [13] 'whf13'
		 [14] 'whf14'
		 [15] 'whf15'
		 [16] 'whf16'
		 [17] 'whf17'
		 [18] 'whf18'
		 [19] 'whf19'
		 [20] 'whf20'
		 [21] 'whf21'
		 [22] 'whf22'
		 [23] 'whf23'
		 [24] 'whf24'
		 [25] 'whf25'
		 [26] 'whf26'
		 [27] 'whf27'
		 [28] 'whf28'
		 [29] 'whf29'
		 [30] 'whf30'
		 [31] 'whf31'
		 [32] 'whf32'
		 [33] 'whf33'
		 [34] 'whf34'
		 [35] 'whf35'
		 [36] 'whf36'
		 [37] 'whf37'
		 [38] 'whf38'
		 [39] 'whf39'
		 [40] 'whf40'
		 [41] 'whf41'
		 [42] 'whf42'
		 [43] 'whf44'
		 [44] 'whf45'
		 [45] 'whf46'
		 [46] 'whf47'
		 [47] 'whf48'
		 [48] 'whf49'
		 [49] 'whf50'
		 [50] 'whf51'
		 [51] 'whf52'
		 [52] 'whf53'
		 [53] 'whf54'
		 [54] 'whf55'
		 [55] 'whf56'
		 [56] 'whf57'
		 [57] 'whf58'
		 [58] 'whf59'
		 [59] 'whf60'
		 [60] 'whf61'
		 [61] 'whf62'
		 [62] 'whf63'
		 [63] 'whf64'
		 [64] 'whf65'
		 [65] 'whf66'
		 [66] 'whf67'
		 [67] 'whf68'
		 [68] 'whf69'
		 [69] 'whf70'
		 [70] 'whf71'
		 [71] 'whf72'
		 [72] 'whf73'
		 [73] 'whf74'
		 [74] 'whf75'
		 [75] 'whf76'
		 [76] 'whf77'
		 [77] 'whf78'
		 [78] 'whf79'
		 [79] 'whf80'
		 [80] 'whf81'
		 [81] 'whf82'
		 [82] 'whf83'
		 [83] 'whf84'
		 [84] 'whf85'
		 [85] 'whf86'
		 [86] 'whf87'
		 [87] 'whf88'
		 [88] 'whf89'
		 [89] 'whf90'
		 [90] 'whf91'
		 [91] 'whf92'
		 [92] 'whf93'
		 [93] 'whf94'
		 [94] 'whf95'
		 [95] 'whf96'
		 [96] 'whf97'
		 [97] 'whf98'
		 [98] 'whf99'
	;
	STATELABELS
		1
		'State 0'
		'State 1'
		'State 2'
		'State 3'
		,
		2
		'State 0'
		'State 1'
		,
		3
		'State 0'
		'State 1'
		,
		4
		'State 0'
		'State 1'
		'State 2'
		,
		5
		'State 0'
		'State 1'
		,
		6
		'State 0'
		'State 1'
		'State 2'
		,
		7
		'State 0'
		'State 1'
		'State 2'
		,
		8
		'State 0'
		'State 1'
		,
		9
		'State 0'
		'State 1'
		,
		10
		'State 0'
		'State 1'
		'State 2'
		'State 3'
		,
		11
		'State 0'
		'State 1'
		,
		12
		'State 0'
		'State 1'
		,
		13
		'State 0'
		'State 1'
		'State 2'
		,
		14
		'State 0'
		'State 1'
		'State 2'
		'State 3'
		,
		15
		'State 0'
		'State 1'
		'State 2'
		,
		16
		'State 0'
		'State 1'
		,
		17
		'State 0'
		'State 1'
		,
		18
		'State 0'
		'State 1'
		,
		19
		'State 0'
		'State 1'
		'State 2'
		,
		20
		'State 0'
		'State 1'
		'State 2'
		,
		21
		'State 0'
		'State 1'
		,
		22
		'State 0'
		'State 1'
		,
		23
		'State 0'
		'State 1'
		'State 2'
		,
		24
		'State 0'
		'State 1'
		'State 2'
		,
		25
		'State 0'
		'State 1'
		'State 2'
		,
		26
		'State 0'
		'State 1'
		'State 2'
		,
		27
		'State 0'
		'State 1'
		'State 2'
		,
		28
		'State 0'
		'State 1'
		'State 2'
		'State 3'
		,
		29
		'State 0'
		'State 1'
		,
		30
		'State 0'
		'State 1'
		,
		31
		'State 0'
		'State 1'
		'State 2'
		,
		32
		'State 0'
		'State 1'
		,
		33
		'State 0'
		'State 1'
		'State 2'
		'State 3'
		,
		34
		'State 0'
		'State 1'
		'State 2'
		,
		35
		'State 0'
		'State 1'
		,
		36
		'State 0'
		'State 1'
		,
		37
		'State 0'
		'State 1'
		,
		38
		'State 0'
		'State 1'
		'State 2'
		,
		39
		'State 0'
		'State 1'
		'State 2'
		,
		40
		'State 0'
		'State 1'
		'State 2'
		'State 3'
		,
		41
		'State 0'
		'State 1'
		'State 2'
		,
		42
		'State 0'
		'State 1'
		,
		43
		'State 0'
		'State 1'
		,
		44
		'State 0'
		'State 1'
		'State 2'
		,
		45
		'State 0'
		'State 1'
		,
		46
		'State 0'
		'State 1'
		,
		47
		'State 0'
		'State 1'
		,
		48
		'State 0'
		'State 1'
		'State 2'
		'State 3'
		,
		49
		'State 0'
		'State 1'
		'State 2'
		,
		50
		'State 0'
		'State 1'
		'State 2'
		,
		51
		'State 0'
		'State 1'
		'State 2'
		,
		52
		'State 0'
		'State 1'
		,
		53
		'State 0'
		'State 1'
		,
		54
		'State 0'
		'State 1'
		'State 2'
		,
		55
		'State 0'
		'State 1'
		,
		56
		'State 0'
		'State 1'
		,
		57
		'State 0'
		'State 1'
		'State 2'
		,
		58
		'State 0'
		'State 1'
		'State 2'
		'State 3'
		,
		59
		'State 0'
		'State 1'
		,
		60
		'State 0'
		'State 1'
		,
		61
		'State 0'
		'State 1'
		,
		62
		'State 0'
		'State 1'
		'State 2'
		,
		63
		'State 0'
		'State 1'
		,
		64
		'State 0'
		'State 1'
		,
		65
		'State 0'
		'State 1'
		,
		66
		'State 0'
		'State 1'
		'State 2'
		'State 3'
		,
		67
		'State 0'
		'State 1'
		,
		68
		'State 0'
		'State 1'
		,
		69
		'State 0'
		'State 1'
		,
		70
		'State 0'
		'State 1'
		,
		71
		'State 0'
		'State 1'
		,
		72
		'State 0'
		'State 1'
		,
		73
		'State 0'
		'State 1'
		,
		74
		'State 0'
		'State 1'
		,
		75
		'State 0'
		'State 1'
		'State 2'
		,
		76
		'State 0'
		'State 1'
		,
		77
		'State 0'
		'State 1'
		,
		78
		'State 0'
		'State 1'
		,
		79
		'State 0'
		'State 1'
		,
		80
		'State 0'
		'State 1'
		,
		81
		'State 0'
		'State 1'
		,
		82
		'State 0'
		'State 1'
		,
		83
		'State 0'
		'State 1'
		,
		84
		'State 0'
		'State 1'
		,
		85
		'State 0'
		'State 1'
		,
		86
		'State 0'
		'State 1'
		,
		87
		'State 0'
		'State 1'
		,
		88
		'State 0'
		'State 1'
		,
		89
		'State 0'
		'State 1'
		,
		90
		'State 0'
		'State 1'
		,
		91
		'State 0'
		'State 1'
		,
		92
		'State 0'
		'State 1'
		,
		93
		'State 0'
		'State 1'
		,
		94
		'State 0'
		'State 1'
		,
		95
		'State 0'
		'State 1'
		,
		96
		'State 0'
		'State 1'
		,
		97
		'State 0'
		'State 1'
		,
		98
		'State 0'
		'State 1'
		
	;
	MATRIX
	'Lepticitis dakotensis'		                11??100110001010000?100000000001000000010?0000?000000?000001?0000000000?????000?0000000???0?0?????
	'Ailurus fulgens'		                      301201?10000120010121?0121030101120001112102010310011100021010001111000000000110110011111010100001
	'Amphicticeps shackelfordi'		            2??1???1000002??10?210?2210301011200?1111010011201011011?1?0?100??????0??????0?010001?0???????????
	'Broiliana nobilis'		                    ??1211?1100012??102?1??22203010112000111111001011001101122?0??0??210000?????000000000?1???????????
	'Canis latrans'		                        100111110000101110121?2021030101120101112011011120011011010010001010010000110000100011010010100001
	'Civettictis spp'		                      201?02110201232100021?0012221101220100120111001101011101010000001310110000100000100010100010111001
	'Daphoenus'		                            ?00110?11000120110021010?10100211101101010100101210010112110?000??00000?????000000001001?010?????1
	'Dawsonicyon isami'		                    ?011???0??00????????????0???????????????101001102100121101??????0???????????00001000110??00?0?????
	'Didymictis vancleveae'		                ????0??1100002000?0?1000000?001001101000011000110101110100????000000??0?????0?0010?0101??0000????1
	'Dinictis felina'		                      1010121011010101000?1?00?10211?10210?010011110120221111101??00001010010?????0?001011101?00101????1
	'Echinosorex gymnura'		                  11120?21100002000002100000010001000000011100010110000000210100000000000?????00110100010??0000?????
	'Erinaceus concolor'		                   010100110000100010011000000000011010000210000102100000002101?0000010000?????01100110110??1100?????
	'Felis composite'		                      200001000201012101221?001202010121110013011110?201211111030000001310110001200100101110100011111001
	'Gulo gulo'		                            201101111000000110221?0221030101120101111111110201211011211010001211000000110001100010110010100011
	'Herpestes spp'		                        100002101201232100021?00222201012201?2130110000202111101011000001211110000100010100010100010111011
	'Herpestides antiquus'		                 201002000201131100021001121211012211001221110012011111?10??0?0001210110?????00101000101??0???????1
	'Hesperocyon gregarious'		               101111?11000121110021011210301011200011120110111200110111100?0001010010?????00001000100??0?00????1
	'Hoplophoneus sp'		                      1?1112101001010100011?10?10211110210?01?0011101202211111????00001010010?????0?001011101?00101????1
	'Hyaenid'		                              2000021002?1232110021?00122201012211?0130111000201111101010000001311110001200000100110100010111011
	'Hyaenodon horridus'		                   00?00000??0001000???0??00?0?????3000?0?00???0002000100100?00000000000000000000?0000000000000000000
	'Lycophocyon hutchisoni'		               100011?100000?01100210112103010011000?1110110110210012110100?00???0???0??????0001000100???????????
	'Mephitis spp'		                         10121211101002001?221?02210301011101?1112111010201211001211010001211000000010101101010110010100011
	'Miacis sylvestris'		                    ??001??00?001101011210110001010101000010101100110100101121????00?000??0?????00001000100??0?0?????1
	'Gustafsonia cognitus'		                 10100??1??00131110021010210101001100101020100111210010112?00?000?000??0?????0000100010???0?0?????1
	'Miacis gracilis'		                      1?10??0000001111011?1?11000101010100001010110111010010111?????00?000??0?????00001000100??0?0?????1
	'Miacis parvivorus'		                    ?011??????0013??0101100000010100000?0010101001100100101121????00?000??0?????00001000100??0?0?????1
	'Miacis uintensis'		                     1??0???0000011?111121?110001010001000?11?0100?1???0?1011?1????0?00?0??0????????010?01?0??0??0?????
	'Mustelavus priscus'		                   ???1?????0??13??100?10?1210301011?01011?111101110111101121?0??0???1000???????00010001?0???????????
	'Nandinia binotata'		                    20100210010113010002100011120101120000120111000201111011010000001300000000100000100010100010111001
	'Oodectes herpestoides'		                101110000000100011021001000101000000001000000010010010002100?0000000??0?????00001000100??0?00????1
	'Otariidae'		                            2012022113?113010?021?002?0??1111200??211?????????011???21011211111100111???100???0?0?110110100101
	'Otarocyon macdonaldi'		                 101111100000101110021?212203010112010111201001112001121101????????????????????????????????????????
	'Palaeoprionodon lamandini'		            20101211?1012311000111001212110121000012??????????1112?1?1?0?000?300??0?????00001001101??0???????1
	'Plesictis genettoides'		                ??10?1?11000130111221??2210301?11200011?101001120121121121?0??00?211000?????00001000101???????????
	'Proailurus lemanensis'		                ?01002??01011311000211001222110122110013011110120121111111?0?000?300??0?????00001001101??0???????1
	'Procyon lotor'		                        201201111000000110221?0221030101120001112102010310011100221010001211000000110000110010111010100001
	'Pseudobassaris riggsi'		                101111?100001301100210?1210301011200011?11100112010110112??0?000?210000??????00000????????????????
	'Pteronarctos goedertae'		               201?0221100112011?021??02?0?0?111101?101??110?12011110110100?2?1111100101???1000100?101??1101????1
	'Quercygale angustidens'		               1001120000001001?1011011010101000000001010110010011112110100?0000000??0?????00000000101???????????
	'Viretictis julieni'		                   2?10020101??1311000211001222110122100013011110120121111121?0?000?300??0?????00001001101??0???????1
	'Tapocyon robustus'		                    101001?00000100101121010010101000001001?201100110210101101?0????0000??0?????00001000100??0?0?????1
	'Thinocyon sp'		                         0?00??000000000100?10000000000000000000000000000000100100000000000000000000000?0000000000000000000
	'Ursus sp'		                             300201110000121000121?10210301211200?1111002010200011000211110001111000100000000010011011110100101
	'Viverravus acutus'		                    ??0001?11010000000?2101000000000?100100101100000010111011000100?0000000?????00001000101??0??0?????
	'Viverravus gracilis'		                  ????0??10010000100??1?0000000000010010010110010202011101?0?0??000000??0?????0?001000101??0?0?????1
	'Viverravus minutus'		                   ??0101?1??10?000000210000000000021001001011001020?011?01?0?0??000000??0?????0?001000101??0?0?????1
	'Viverravus politus'		                   ?10101?110100000?00210000000000001000001011000?001011101?00??000?000??0?????00001000101??0?0?????1
	'Vulpavus ovatus'		                      11111100000010001101100101010100?000001111000101010012002?0??0000000??0?????00001000100??0000????1
	'Vulpavus profectus'		                   11101??1000010010110010000010100000010101000011111001200210??0000000??0?????00001000110??0000????1
	'Zodiolestes daimonelixensis'		          10?101010000110110221012210301111200011120110112011110112101?0001210000?????00001000111??01?0????1
    ;
    ENDBLOCK;

          BEGIN NOTES;
      
      [Attribute comments]
            ENDBLOCK;
            BEGIN ASSUMPTIONS;
      TYPESET * UNTITLED = unord: 1 - 39 41 - 98, ord: 40;
      ENDBLOCK;
      BEGIN MESQUITE;
 MESQUITESCRIPTVERSION 2; TITLE AUTO; tell ProjectCoordinator; timeSaved 1313110034150; getEmployee #mesquite.minimal.ManageTaxa.ManageTaxa; tell It; setID 0 1682980467863505803; endTell; getEmployee #mesquite.charMatrices.ManageCharacters.ManageCharacters; tell It; setID 0 2985903838849601886; tell It; setSelected 32; attachments ; endTell; checksumv 0 2 4274868573 null getNumChars 98 numChars 98 getNumTaxa 50 numTaxa 50 short true bits 15 states 15 sumSquaresStatesOnly 15604.0 sumSquares 15604.0 NumFiles 1 NumMatrices 1; endTell; getWindow; tell It; suppress; setResourcesState false false 100; setPopoutState 400; setExplanationSize 0; setAnnotationSize 0; setFontIncAnnot 0; setFontIncExp 0; setSize 1223 704; setLocation 126 53; setFont SanSerif; setFontSize 10; getToolPalette; tell It; endTell; desuppress; endTell; getEmployee #mesquite.trees.BasicTreeWindowCoord.BasicTreeWindowCoord; tell It; makeTreeWindow #1682980467863505803 #mesquite.trees.BasicTreeWindowMaker.BasicTreeWindowMaker; tell It; suppressEPCResponse; setTreeSource #mesquite.trees.StoredTrees.StoredTrees; tell It; setTreeBlock 1; toggleUseWeights off; endTell; setAssignedID 868.1308027896439.1572440519192008446; getTreeWindow; tell It; setExplanationSize 30; setAnnotationSize 20; setFontIncAnnot 0; setFontIncExp 0; setSize 1123 637; setLocation 126 53; setFont SanSerif; setFontSize 10; getToolPalette; tell It; endTell; setActive; getTreeDrawCoordinator #mesquite.trees.BasicTreeDrawCoordinator.BasicTreeDrawCoordinator; tell It; suppress; setTreeDrawer #mesquite.trees.SquareTree.SquareTree; tell It; setNodeLocs #mesquite.trees.NodeLocsStandard.NodeLocsStandard; tell It; branchLengthsToggle off; toggleScale on; toggleBroadScale off; toggleCenter on; toggleEven on; endTell; setEdgeWidth 6; orientUp; setCornerMode Right_Angle 50; endTell; setBackground White; setBranchColor Black; showNodeNumbers off; showBranchColors on; labelBranchLengths off; centerBrLenLabels on; showBrLensUnspecified on; showBrLenLabelsOnTerminals on; setBrLenLabelColor 0 0 255; setNumBrLenDecimals 6; desuppress; getEmployee #mesquite.trees.BasicDrawTaxonNames.BasicDrawTaxonNames; tell It; setColor Black; toggleColorPartition on; toggleShadePartition off; toggleShowFootnotes on; toggleNodeLabels on; toggleCenterNodeNames off; toggleShowNames on; namesAngle ?; endTell; endTell; setTreeNumber 166; setDrawingSizeMode 0; toggleLegendFloat on; scale 0; toggleTextOnTree off; showWindow; endTell; desuppressEPCResponse; getEmployee #mesquite.trees.ColorBranches.ColorBranches; tell It; setColor Red; removeColor off; endTell; getEmployee #mesquite.ornamental.BranchNotes.BranchNotes; tell It; setAlwaysOn off; endTell; getEmployee #mesquite.ornamental.ColorTreeByPartition.ColorTreeByPartition; tell It; colorByPartition off; endTell; getEmployee #mesquite.ornamental.DrawTreeAssocDoubles.DrawTreeAssocDoubles; tell It; setOn on; setDigits 4; writeAsPercentage off; toggleCentred on; toggleHorizontal on; setFontSize 10; setOffset 0 0; endTell; getEmployee #mesquite.trees.TreeInfoValues.TreeInfoValues; tell It; panelOpen false; endTell; endTell; endTell; getEmployee #mesquite.charMatrices.BasicDataWindowCoord.BasicDataWindowCoord; tell It; showDataWindow #2985903838849601886 #mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindowMaker; tell It; getWindow; tell It; setExplanationSize 30; setAnnotationSize 20; setFontIncAnnot 0; setFontIncExp 0; setSize 1123 637; setLocation 126 53; setFont SanSerif; setFontSize 10; getToolPalette; tell It; endTell; setTool mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindow.arrow; colorCells #mesquite.charMatrices.NoColor.NoColor; colorRowNames #mesquite.charMatrices.TaxonGroupColor.TaxonGroupColor; colorColumnNames #mesquite.charMatrices.CharGroupColor.CharGroupColor; colorText #mesquite.charMatrices.NoColor.NoColor; setBackground White; toggleShowNames on; toggleShowTaxonNames on; toggleTight off; toggleThinRows off; toggleShowChanges on; toggleSeparateLines off; toggleShowStates on; toggleAutoWCharNames on; toggleAutoTaxonNames off; toggleShowDefaultCharNames off; toggleConstrainCW on; toggleBirdsEye off; toggleAllowAutosize on; toggleColorsPanel off; toggleDiagonal on; setDiagonalHeight 57; toggleLinkedScrolling on; toggleScrollLinkedTables off; endTell; getWindow; tell It; forceAutosize; endTell; hideWindow; getEmployee #mesquite.charMatrices.ColorCells.ColorCells; tell It; setColor Red; removeColor off; endTell; getEmployee #mesquite.categ.StateNamesStrip.StateNamesStrip; tell It; showStrip off; endTell; getEmployee #mesquite.charMatrices.AnnotPanel.AnnotPanel; tell It; togglePanel off; endTell; getEmployee #mesquite.charMatrices.CharReferenceStrip.CharReferenceStrip; tell It; showStrip off; endTell; getEmployee #mesquite.charMatrices.QuickKeySelector.QuickKeySelector; tell It; autotabOff; endTell; getEmployee #mesquite.categ.SmallStateNamesEditor.SmallStateNamesEditor; tell It; panelOpen true; endTell; endTell; endTell; endTell; 
ENDBLOCK;
BEGIN MESQUITECHARMODELS;
 ProbModelSet * UNTITLED = 'Mk1 (est.)': 1 - 98; 
ENDBLOCK;
BEGIN TREES;
 Title 'Trees from "all taxa.nex"'; LINK Taxa = Taxa; TRANSLATE 1 Lepticitis_dakotensis, 2 Ailurus_fulgens, 3 Amphicticeps_shackelfordi, 4 Broiliana_nobilis, 5 Canis_latrans, 6 Civettictis_spp, 7 Daphoenus, 8 Dawsonicyon_isami, 9 Didymictis_vancleveae, 10 Dinictis_felina, 11 Echinosorex_gymnura, 12 Erinaceus_concolor, 13 Felis_composite, 14 Gulo_gulo, 15 Herpestes_spp, 16 Herpestides_antiquus, 17 Hesperocyon_gregarious, 18 Hoplophoneus_sp, 19 Hyaenid, 20 Hyaenodon_horridus, 21 Lycophocyon_hutchisoni, 22 Mephitis_spp, 23 Miacis_sylvestris, 24 Miacis_cognitus, 25 Miacis_gracilis, 26 Miacis_parvivorus, 27 Miacis_uintensis, 28 Mustelavus_priscus, 29 Nandinia_binotata, 30 Oodectes_herpestoides, 31 Otariidae, 32 Otarocyon_macdonaldi, 33 Palaeoprionodon_lamandini, 34 Plesictis_genettoides, 35 Proailurus_lemanensis, 36 Procyon_lotor, 37 Pseudobassaris_riggsi, 38 Pteronarctos_goedertae, 39 Quercygale_angustidens, 40 Stenogale_julieni, 41 Tapocyon_robustus, 42 Thinocyon_sp, 43 Ursus_sp, 44 Viverravus_acutus, 45 Viverravus_gracilis, 46 Viverravus_minutus, 47 Viverravus_politus, 48 Vulpavus_ovatus, 49 Vulpavus_profectus, 50 Zodiolestes_daimonelixensis; TREE 'MPT50-1' = (1,((((30,(48,(49,(26,(8,(39,(41,((((21,(((3,(50,((34,((4,(36,(2,43))),(14,22))),(31,38)))),(28,37)),(17,(5,32)))),(7,24)),((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18))),(27,(23,25)))))))))),(9,(44,(47,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-2' = (1,((((30,((26,(8,(39,(41,((((21,(((3,(50,((34,((4,(36,(2,43))),(14,22))),(31,38)))),(28,37)),(17,(5,32)))),(7,24)),((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18))),(27,(23,25))))))),(48,49))),(9,(44,(47,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-3' = (1,((((30,(48,(49,(26,(8,(39,(41,((((21,(((50,(3,((34,((4,(36,(2,43))),(14,22))),(31,38)))),(28,37)),(17,(5,32)))),(7,24)),((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18))),(27,(23,25)))))))))),(9,(44,(47,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-4' = (1,((((30,((26,(8,(39,(41,((((21,(((50,(3,((34,((4,(36,(2,43))),(14,22))),(31,38)))),(28,37)),(17,(5,32)))),(7,24)),((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18))),(27,(23,25))))))),(48,49))),(9,(44,(47,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-5' = (1,((((30,(48,(49,(26,(8,(39,(41,((((21,(((50,((((4,(36,(2,43))),(14,22)),(31,38)),(3,34))),(28,37)),(17,(5,32)))),(7,24)),((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18))),(27,(23,25)))))))))),(9,(44,(47,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-6' = (1,((((30,((26,(8,(39,(41,((((21,(((50,((((4,(36,(2,43))),(14,22)),(31,38)),(3,34))),(28,37)),(17,(5,32)))),(7,24)),((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18))),(27,(23,25))))))),(48,49))),(9,(44,(47,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-7' = (1,((((30,((26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-8' = (1,((((30,((26,((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,(41,(27,(23,25)))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-9' = (1,((((30,((26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-10' = (1,((((30,((26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-11' = (1,((((30,(48,(49,(26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-12' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))),(8,(39,41)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-13' = (1,((((30,((26,(((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)),(8,(39,41)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-14' = (1,((((30,((26,((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,(41,(27,(23,25)))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-15' = (1,((((30,((26,((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,(41,(27,(23,25)))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-16' = (1,((((30,((26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-17' = (1,((((30,((26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-18' = (1,((((30,((26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-19' = (1,((((30,((26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-20' = (1,((((30,((26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-21' = (1,((((30,((26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-22' = (1,((((30,(48,(49,(26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-23' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))),(8,(39,41)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-24' = (1,((((30,((26,(((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)),(8,(39,41)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-25' = (1,((((30,((26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-26' = (1,((((30,((26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-27' = (1,((((30,(48,(49,(26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-28' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))),(8,(39,41)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-29' = (1,((((30,((26,(((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)),(8,(39,41)))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-30' = (1,((((30,((26,((41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))),(8,39))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-31' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))),(8,39))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-32' = (1,((((30,((26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-33' = (1,((((30,((26,((41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))),(8,39))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-34' = (1,((((30,((26,((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,(41,(27,(23,25)))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-35' = (1,((((30,((26,((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24))),(39,(41,(27,(23,25)))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-36' = (1,((((30,((26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-37' = (1,((((30,(48,(49,(26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-38' = (1,((((30,(48,(49,(26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-39' = (1,((((30,(48,(49,(26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-40' = (1,((((30,(48,(49,(26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-41' = (1,((((30,(48,(49,(26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-42' = (1,((((30,((26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-43' = (1,((((30,(48,(49,(26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-44' = (1,((((30,(48,(49,(26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-45' = (1,((((30,(48,(49,(26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-46' = (1,((((30,(48,(49,(26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-47' = (1,((((30,(48,(49,(26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-48' = (1,((((30,((26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-49' = (1,((((30,(48,(49,(26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-50' = (1,((((30,(48,(49,(26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-51' = (1,((((30,(48,(49,(26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-52' = (1,((((30,((26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-53' = (1,((((30,(48,(49,(26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-54' = (1,((((30,(48,(49,(26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-55' = (1,((((30,((26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-56' = (1,((((30,(48,(49,(26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-57' = (1,((((30,(48,(49,(26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-58' = (1,((((30,((26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-59' = (1,((((30,(48,(49,(26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-60' = (1,((((30,(48,(49,(26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),(33,((13,(10,18)),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-61' = (1,((((30,((26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-62' = (1,((((30,(48,(49,(26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-63' = (1,((((30,(48,(49,(26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-64' = (1,((((30,(48,(49,(26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-65' = (1,((((30,(48,(49,(26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-66' = (1,((((30,(48,(49,(26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-67' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))),(8,(39,41)))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-68' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))),(8,(39,41)))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-69' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))),(8,(39,41)))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-70' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))),(8,(39,41)))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-71' = (1,((((30,((26,(((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)),(8,(39,41)))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-72' = (1,((((30,((26,((41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))),(8,39))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-73' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))),(8,39))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-74' = (1,((((30,((26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))))))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-75' = (1,((((30,((26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)))))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-76' = (1,((((30,((26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-77' = (1,((((30,((26,((41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))),(8,39))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-78' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))),(8,39))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-79' = (1,((((30,((26,(((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)),(8,(39,41)))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-80' = (1,((((30,((26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))))))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-81' = (1,((((30,((26,((41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))),(8,39))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-82' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))),(8,39))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-83' = (1,((((30,((26,(((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)),(8,(39,41)))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-84' = (1,((((30,((26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))))))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-85' = (1,((((30,((26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)))))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-86' = (1,((((30,((26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-87' = (1,((((30,((26,((41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))),(8,39))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-88' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))),(8,39))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-89' = (1,((((30,((26,(((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)),(8,(39,41)))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-90' = (1,((((30,((26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))))))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-91' = (1,((((30,((26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)))))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-92' = (1,((((30,((26,(8,(39,(41,(23,(25,(27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-93' = (1,((((30,((26,((41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))),(8,39))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-94' = (1,((((30,((26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25))))))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-95' = (1,((((30,((26,((41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))),(8,39))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-96' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))),(8,39))),(48,49))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-97' = (1,((((30,((26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-98' = (1,((((30,((26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-99' = (1,((((30,((26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-100' = (1,((((30,(48,(49,(26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-101' = (1,((((30,((26,((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24))),(39,(41,(27,(23,25)))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-102' = (1,((((30,((26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-103' = (1,((((30,((26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-104' = (1,((((30,((26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-105' = (1,((((30,(48,(49,(26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-106' = (1,((((30,((26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-107' = (1,((((30,(48,(49,(26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-108' = (1,((((30,(48,(49,(26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-109' = (1,((((30,(48,(49,(26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-110' = (1,((((30,(48,(49,(26,(8,(39,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-111' = (1,((((30,((26,((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24))),(39,(41,(27,(23,25)))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-112' = (1,((((30,((26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-113' = (1,((((30,((26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-114' = (1,((((30,((26,((((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(41,(27,(23,25)))),(8,39))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-115' = (1,((((30,((26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-116' = (1,((((30,((26,((41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))),(8,39))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-117' = (1,((((30,(48,(49,(26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-118' = (1,((((30,(48,(49,(26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-119' = (1,((((30,(48,(49,(26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-120' = (1,((((30,(48,(49,(26,(8,(39,(41,(27,(23,(25,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24)))))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-121' = (1,((((30,(48,(49,(26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-122' = (1,((((30,((26,(8,(39,(41,(((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24)),(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-123' = (1,((((30,((26,(8,(39,(41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25)))))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-124' = (1,((((30,((26,((41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,19))),((13,(10,18)),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))),(8,39))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-125' = (1,((((30,((26,((41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),(33,((10,18),(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))),(8,39))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-126' = (1,((((30,((26,((41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))),(8,39))),(48,49))),(9,((44,47),(45,46)))),(20,42)),(11,12))); TREE 'MPT50-127' = (1,((((30,(48,(49,(26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25))))))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-128' = (1,((((30,(48,(49,(26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,(((16,(6,(15,(13,19)))),(33,(35,40))),(10,18))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25))))))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-129' = (1,((((30,(48,(49,(26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((10,18),(33,(35,40))))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25))))))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-130' = (1,((((30,(48,(49,(26,(((8,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24))),(39,41)),(27,(23,25))))))),(9,(47,(44,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-131' = (1,((((30,((26,((41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),(((29,((16,(6,(15,(13,19)))),(33,(35,40)))),(10,18)),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))),(8,39))),(48,49))),(9,(44,(47,(45,46))))),(20,42)),(11,12))); TREE 'MPT50-132' = (1,((((30,((26,((41,((27,((21,((3,(37,(28,(50,((34,((4,(36,(2,43))),(14,22))),((29,((16,(6,(15,(13,19)))),((33,(10,18)),(35,40)))),(31,38))))))),(17,(5,32)))),(7,24))),(23,25))),(8,39))),(48,49))),(9,(44,(47,(45,46))))),(20,42)),(11,12))); TREE Consensus50 = (1,((((30,(48,49,(26,(8,23,25,27,39,41,(3,21,28,34,37,50,((4,(36,(2,43))),(14,22)),(17,(5,32)),(6,13,15,16,19,29,33,(10,18),(35,40)),(7,24),(31,38)))))),(9,(44,47,(45,46)))),(20,42)),(11,12))); TREE 'MPT33-1' = (1,(((49,((26,(8,(39,(41,((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),((10,18),(33,(35,40)))),(27,(23,25))))))),(30,48))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-2' = (1,(((49,((26,(8,(39,(41,((((21,((28,(37,(3,(4,34)))),(17,32))),(7,24)),((10,18),(33,(35,40)))),(27,(23,25))))))),(30,48))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-3' = (1,(((49,((26,(8,(39,((((21,((28,(37,(3,(4,34)))),(17,32))),(7,24)),((10,18),(33,(35,40)))),(41,(27,(23,25))))))),(30,48))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-4' = (1,(((30,((26,(8,(39,((((21,((28,(37,(3,(4,34)))),(17,32))),(7,24)),((10,18),(33,(35,40)))),(41,(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42))); TREE 'MPT33-5' = (1,(((30,(48,(49,(26,(8,(39,((((21,((28,(37,(3,(4,34)))),(17,32))),(7,24)),((10,18),(33,(35,40)))),(41,(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42))); TREE 'MPT33-6' = (1,(((30,((26,(8,(39,(41,((((21,((28,(37,(3,(4,34)))),(17,32))),(7,24)),((10,18),(33,(35,40)))),(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42))); TREE 'MPT33-7' = (1,(((30,(48,(49,(26,(8,(39,(41,((((21,((28,(37,(3,(4,34)))),(17,32))),(7,24)),((10,18),(33,(35,40)))),(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42))); TREE 'MPT33-8' = (1,(((30,((26,(8,(39,(41,((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),((10,18),(33,(35,40)))),(27,(23,25))))))),(48,49))),(9,((44,47),(45,46)))),(20,42))); TREE 'MPT33-9' = (1,(((30,(48,(49,(26,(8,(39,(41,((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),((10,18),(33,(35,40)))),(27,(23,25)))))))))),(9,((44,47),(45,46)))),(20,42))); TREE 'MPT33-10' = (1,(((49,((26,(8,((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),(27,(23,25))),(41,(39,((10,18),(33,(35,40)))))))),(30,48))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-11' = (1,(((49,((26,(8,(((27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24))),(23,25)),(41,(39,((10,18),(33,(35,40)))))))),(30,48))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-12' = (1,(((49,((26,(8,((41,((27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24))),(23,25))),(39,((10,18),(33,(35,40))))))),(30,48))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-13' = (1,(((49,((26,(8,((41,(23,(25,(27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)))))),(39,((10,18),(33,(35,40))))))),(30,48))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-14' = (1,(((49,((((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),(41,(39,((10,18),(33,(35,40)))))),(27,(23,25))),(8,26)),(30,48))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-15' = (1,((((49,(((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),(41,(39,((10,18),(33,(35,40)))))),(27,(23,25))),(8,26))),(30,48)),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-16' = (1,(((30,(48,(49,(((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),(41,(39,((10,18),(33,(35,40)))))),(27,(23,25))),(8,26))))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-17' = (1,(((30,((((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),(41,(39,((10,18),(33,(35,40)))))),(27,(23,25))),(8,26)),(48,49))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-18' = (1,((((49,((((27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24))),(23,25)),(41,(39,((10,18),(33,(35,40)))))),(8,26))),(30,48)),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-19' = (1,((((49,(((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),(27,(23,25))),(41,(39,((10,18),(33,(35,40)))))),(8,26))),(30,48)),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-20' = (1,(((30,(48,(49,(8,(26,((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),(41,(39,((10,18),(33,(35,40)))))),(27,(23,25)))))))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-21' = (1,(((30,(48,(49,((((27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24))),(23,25)),(41,(39,((10,18),(33,(35,40)))))),(8,26))))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-22' = (1,(((30,(48,(49,(8,(26,((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),(27,(23,25))),(41,(39,((10,18),(33,(35,40))))))))))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-23' = (1,(((30,(48,(49,(((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),(27,(23,25))),(41,(39,((10,18),(33,(35,40)))))),(8,26))))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-24' = (1,(((30,(((((27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24))),(23,25)),(41,(39,((10,18),(33,(35,40)))))),(8,26)),(48,49))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-25' = (1,(((30,((26,(8,((((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)),(27,(23,25))),(41,(39,((10,18),(33,(35,40)))))))),(48,49))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-26' = (1,(((30,(48,(49,(8,(26,(((27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24))),(23,25)),(41,(39,((10,18),(33,(35,40))))))))))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-27' = (1,(((30,(48,(49,(26,(8,((41,((27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24))),(23,25))),(39,((10,18),(33,(35,40)))))))))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-28' = (1,(((30,((26,(8,((41,((27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24))),(23,25))),(39,((10,18),(33,(35,40))))))),(48,49))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-29' = (1,(((30,((26,(8,((41,(23,(25,(27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)))))),(39,((10,18),(33,(35,40))))))),(48,49))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-30' = (1,(((30,(48,(49,(26,(8,((41,(23,(25,(27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)))))),(39,((10,18),(33,(35,40)))))))))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-31' = (1,(((((41,((27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24))),(23,25))),(39,((10,18),(33,(35,40))))),(8,(26,(30,(48,49))))),(9,(44,(47,(45,46))))),(20,42))); TREE 'MPT33-32' = (1,(((((41,(23,(25,(27,((21,(((3,(4,34)),(28,37)),(17,32))),(7,24)))))),(39,((10,18),(33,(35,40))))),(8,(26,(30,(48,49))))),(9,(44,(47,(45,46))))),(20,42))); TREE Consensus33 = (1,(((8,26,30,48,49,(23,25,27,39,41,((21,((28,37,(3,(4,34))),(17,32))),(7,24)),((10,18),(33,(35,40))))),(9,(44,47,(45,46)))),(20,42))); 
ENDBLOCK;
